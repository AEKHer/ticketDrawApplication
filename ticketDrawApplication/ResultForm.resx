<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gjDj/8whPVh1Rj57AAAAAElFTkSuQmCC
</value>
  </data>
</root>